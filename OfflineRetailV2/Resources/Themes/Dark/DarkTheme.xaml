<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OfflineRetailV2.Resources.Themes.Dark"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                  xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
              xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
               xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
              xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d" 
                    xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduling" 
        xmlns:dxschv="http://schemas.devexpress.com/winfx/2008/xaml/scheduling/visual"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">



    <Style TargetType="{x:Type GroupBox}" >
        <Setter Property="BorderBrush" Value="#445766" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="3,0"></Setter>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"  Foreground="White"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#445766" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="2"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <Border Grid.Column="0" Width="25" Height="25" Background="#2F3A4D" BorderBrush="#445766" BorderThickness="1"
                                CornerRadius="85"
                                HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image Source="{DynamicResource BlueCircle}" Width="7" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center" Name="check" Visibility="Hidden"></Image>

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="check" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style TargetType="dxe:ComboBoxEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        <Setter Property="AllowDefaultButton" Value="False"/>
            <Setter Property="AutoComplete" Value="True"></Setter>
            <Setter Property="ImmediatePopup" Value="True"></Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="dxe:ComboBoxEditItem">
                    <Setter Property="Height" Value="45" />
                    <Setter Property="Background" Value="#2F3A4D"></Setter>
                    <Setter Property="BorderBrush" Value="#3C4C5C" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ButtonTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl>
                            <dxe:ButtonInfo IsLeft="False" GlyphKind="Custom" ButtonKind="Simple" IsDefaultButton="True">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <Button Focusable ="True" >
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <ContentPresenter/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        <dx:DXImage x:Name="imgArrow" Source="{DynamicResource GreenDropdownD}" Height="15" Width="16" Margin="0,0,7,0" >
                                            </dx:DXImage>
                                        </Button>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxe:ComboBoxEdit}},
                                                           Path=IsPopupOpen}" Value="True">
                                            <Setter TargetName="imgArrow" Property="Source" Value="{DynamicResource GreenDropdownU}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxe:ComboBoxEdit}},
                                                           Path=IsPopupOpen}" Value="False">
                                            <Setter TargetName="imgArrow" Property="Source" Value="{DynamicResource GreenDropdownD}"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>


                        </ContentControl>

                    </DataTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="ButtonsSource">
                <Setter.Value>
                    <x:Array Type="{x:Type sys:String}">
                        DefaultButton
                    </x:Array>
                </Setter.Value>
            </Setter>

        <Style.Resources>

            <Style TargetType="ScrollBar">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Background" Value="#445766"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </Style.Resources>

    </Style>

        <Style TargetType="dxg:LookUpEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        <Setter Property="AllowDefaultButton" Value="False"/>
            <Setter Property="ButtonTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl>
                            <dxe:ButtonInfo IsLeft="False" GlyphKind="Custom" ButtonKind="Simple"  IsDefaultButton="True">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <Button Focusable ="True" >
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <ContentPresenter/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        <dx:DXImage x:Name="imgArrow" Source="{DynamicResource GreenDropdownD}" Height="15" Width="16" Margin="0,0,5,0"/>
                                        </Button>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxg:LookUpEdit}},
                                                           Path=IsPopupOpen}" Value="True">
                                            <Setter TargetName="imgArrow" Property="Source" Value="{DynamicResource GreenDropdownU}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxg:LookUpEdit}},
                                                           Path=IsPopupOpen}" Value="False">
                                            <Setter TargetName="imgArrow" Property="Source" Value="{DynamicResource GreenDropdownD}"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>
                        </ContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ButtonsSource">
                <Setter.Value>
                    <x:Array Type="{x:Type sys:String}">
                        DefaultButton
                    </x:Array>
                </Setter.Value>
            </Setter>

        <Style.Resources>

            <Style TargetType="ScrollBar">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Background" Value="#445766"/>



                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="dxg:TableView">
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="dxg:RowControl">
                            <Setter Property="Background" Value="#292E41"/>
                            <Setter Property="BorderBrush" Value="#3C4C5C" />
                            <Setter Property="Height" Value="45"/>
                            <!--<Setter Property="Margin" Value="0,0,0,7"/>-->
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Style.Triggers>
                                <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                                    <Setter Property="Background" Value="#406EC1DA" />
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>


    


    <Style TargetType="dxe:PopupColorEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        <Setter Property="ChipSize" Value="Large"></Setter>
        <Setter Property="AllowDefaultButton" Value="False"></Setter>
            <Setter Property="ButtonTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl>
                            <dxe:ButtonInfo IsLeft="False" GlyphKind="Custom" ButtonKind="Simple"  IsDefaultButton="True">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <Button Focusable ="True" >
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <ContentPresenter/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        <dx:DXImage Source="{DynamicResource GreenDropdownD}" Height="15" Width="16" Margin="0,0,5,0"/>
                                        </Button>
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>
                        </ContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ButtonsSource">
                <Setter.Value>
                    <x:Array Type="{x:Type sys:String}">
                        DefaultButton
                    </x:Array>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="dxe:FontEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        <Setter Property="AllowDefaultButton" Value="False"></Setter>
            <Setter Property="ButtonTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl>
                            <dxe:ButtonInfo IsLeft="False" GlyphKind="Custom" ButtonKind="Simple"  IsDefaultButton="True">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <Button Focusable ="True" >
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <ContentPresenter/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        <dx:DXImage Source="{DynamicResource GreenDropdownD}" Height="15" Width="16" Margin="0,0,5,0"/>
                                        </Button>
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>
                        </ContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ButtonsSource">
                <Setter.Value>
                    <x:Array Type="{x:Type sys:String}">
                        DefaultButton
                    </x:Array>
                </Setter.Value>
            </Setter>


        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Height" Value="45" />
                    <Setter Property="Background" Value="#2F3A4D"/>
                    <Setter Property="BorderBrush" Value="#445766"/>
                </Style>
            </Setter.Value>
        </Setter>


        <Style.Resources>

            <Style TargetType="ScrollBar">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Background" Value="#445766"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </Style.Resources>
            
    </Style>
    
      

    <Style TargetType="dxe:SpinEdit"  x:Shared="False">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        <Setter Property="AllowDefaultButton" Value="False"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>


    </Style>



    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="{dxet:ButtonsThemeKey ResourceKey=SpinUpButtonTemplate, IsThemeIndependent=True}">
            <Grid SnapsToDevicePixels="true" Width="Auto" Height="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
            <dx:DXImage Source="{DynamicResource GreenUp}" Height="9" Width="12" Stretch="Fill" Margin="0,4,7,0">
                </dx:DXImage>
            </Grid>
        </ControlTemplate>

        <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="{dxet:ButtonsThemeKey ResourceKey=SpinDownButtonTemplate, IsThemeIndependent=True}">
            <Grid SnapsToDevicePixels="true" Width="Auto" Height="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
            <dx:DXImage Source="{DynamicResource GreenDown}" Height="9" Width="12" Stretch="Fill" Margin="0,0,7,4">
                </dx:DXImage>
            </Grid>
        </ControlTemplate>

        <Style TargetType="dxe:DateEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        <Setter Property="AllowDefaultButton" Value="False"></Setter>
            <Setter Property="ButtonTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl>
                            <dxe:ButtonInfo IsLeft="False" GlyphKind="Custom" ButtonKind="Simple"  IsDefaultButton="True">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <Button Focusable ="True" >
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <ContentPresenter/>
                                                </ControlTemplate>
                                            </Button.Template>
                                            <dx:DXImage Source="{StaticResource CalendarIcon}" Height="15" Width="16" Margin="0,0,5,0"/>
                                        </Button>
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>
                        </ContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ButtonsSource">
                <Setter.Value>
                    <x:Array Type="{x:Type sys:String}">
                        DefaultButton
                    </x:Array>
                </Setter.Value>
            </Setter>
        </Style>



        <Style TargetType="dxe:TextEdit">
            <Setter Property="Background" Value="#2F3A4D"/>
            <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        </Style>


        <Style TargetType="dxe:PasswordBoxEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
        </Style>

    <Style TargetType="dxe:ButtonEdit">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource OSRegular}"/>
    </Style>



    <ControlTemplate x:Key="{dxgt:TableViewThemeKey IsThemeIndependent=true, ResourceKey=DataPresenterTemplate}" 
                         TargetType="{x:Type dxg:DataPresenter}">
            <Border Background="#292E41">
                <ContentPresenter />
            </Border>
        </ControlTemplate>
        <Style TargetType="{x:Type dxg:GridControl}">
            <Setter Property="ShowBorder" Value="False"/>

        
    </Style>

        <Style TargetType="{x:Type dxg:GridColumnHeader}">

            <Setter Property="Background" Value="#4F9DAD" />
                        <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#4F9DAD"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="25"/>
            <Setter Property="ShowFilterButtonOnHover" Value="False"/>

            <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"/>
            <Setter Property="FontSize" Value="11"/>


        </Style>

    

        <Style TargetType="{x:Type dxg:TableView}">
            <Setter Property="ShowVerticalLines" Value="False"/>
            <Setter Property="ShowHorizontalLines" Value="False"/>
            <Setter Property="ShowBandsPanel" Value="False"/>
            <Setter Property="ShowIndicator" Value="False"/>
            <Setter Property="ShowTotalSummary" Value="False"/>
            <Setter Property="AllowPerPixelScrolling" Value="True"/>
            <Setter Property="AllowEditing" Value="False"/>
            <Setter Property="ShowSearchPanelMode" Value="Never"/>
            <Setter Property="ShowGroupPanel" Value="False"/>
        <Setter Property="ShowHorizontalLines" Value="True"></Setter>
        <Setter Property="ShowVerticalLines" Value="True"></Setter>
        <Setter Property="AllowFilterEditor" Value="False"/>
            <Setter Property="SearchPanelAllowFilter" Value="False"/>
            <Setter Property="ShowBandsInCustomizationForm" Value="False"/>
            <Setter Property="VerticalScrollbarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollbarVisibility" Value="Disabled"/>
            <Setter Property="NavigationStyle" Value="Row"/>
            <Setter Property="ShowFilterPanelMode" Value="Never"/>
        <Setter Property="AllowColumnFiltering" Value="False"/>

        
        <Setter Property="CellStyle">
            <Setter.Value>

                <Style TargetType="{x:Type dxg:LightweightCellEditor}">
                    <Setter Property="BorderBrush" Value="#3C4C5C"/>
                </Style>
            </Setter.Value>
        </Setter>

        <!--
        <Setter Property="CellStyle">
            <Setter.Value>
                
                <Style BasedOn="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}" TargetType="{x:Type dxg:LightweightCellEditor}">
                    <Setter Property="BorderBrush" Value="#3C4C5C"/>
                </Style>
            </Setter.Value>
        </Setter>
        -->
        

        <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="dxg:RowControl">
                        <Setter Property="Background" Value="#292E41"/>
                        <Setter Property="BorderBrush" Value="#3C4C5C" />
                        <Setter Property="Height" Value="33"/>
                        <!--<Setter Property="Margin" Value="0,0,0,7"/>-->
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                                <Setter Property="Background" Value="#406EC1DA" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </Setter.Value>
            </Setter>


        </Style>


        <Style TargetType="dxg:GridColumn">
            <Setter Property="ColumnHeaderContentStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="FontSize" Value="11" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"></Setter>

                    </Style>
                </Setter.Value>
            </Setter>
        </Style>





    <Style x:Key="partGrd" TargetType="{x:Type dxg:GridControl}">
        <Setter Property="ShowBorder" Value="False"/>

        <Style.Resources>


            <Style TargetType="{x:Type dxg:GridColumnHeader}">

                <Setter Property="Background" Value="#4F9DAD" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="#4F9DAD"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="25"/>
                <Setter Property="ShowFilterButtonOnHover" Value="False"/>

                <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"/>
                <Setter Property="FontSize" Value="11"/>


            </Style>



            <Style TargetType="{x:Type dxg:TableView}">
                <Setter Property="ShowVerticalLines" Value="False"/>
                <Setter Property="ShowHorizontalLines" Value="False"/>
                <Setter Property="ShowBandsPanel" Value="False"/>
                <Setter Property="ShowIndicator" Value="False"/>
                <Setter Property="ShowTotalSummary" Value="False"/>
                <Setter Property="AllowPerPixelScrolling" Value="True"/>
                <Setter Property="AllowEditing" Value="False"/>
                <Setter Property="ShowSearchPanelMode" Value="Never"/>
                <Setter Property="ShowGroupPanel" Value="False"/>
                <Setter Property="ShowHorizontalLines" Value="True"></Setter>
                <Setter Property="ShowVerticalLines" Value="True"></Setter>
                <Setter Property="AllowFilterEditor" Value="False"/>
                <Setter Property="SearchPanelAllowFilter" Value="False"/>
                <Setter Property="ShowBandsInCustomizationForm" Value="False"/>
                <Setter Property="VerticalScrollbarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollbarVisibility" Value="Disabled"/>
                <Setter Property="NavigationStyle" Value="Row"/>
                <Setter Property="ShowFilterPanelMode" Value="Never"/>
                <Setter Property="AllowColumnFiltering" Value="False"/>


                <Setter Property="CellStyle">
                    <Setter.Value>

                        <Style TargetType="{x:Type dxg:LightweightCellEditor}">
                            <Setter Property="BorderBrush" Value="#3C4C5C"/>
                        </Style>
                    </Setter.Value>
                </Setter>

               


                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="dxg:RowControl">
                            <Setter Property="Background" Value="#292E41"/>
                            <Setter Property="BorderBrush" Value="#3C4C5C" />
                            <Setter Property="Height" Value="50"/>
                            <!--<Setter Property="Margin" Value="0,0,0,7"/>-->
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Style.Triggers>
                                <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                                    <Setter Property="Background" Value="#406EC1DA" />
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </Setter.Value>
                </Setter>


            </Style>


            <Style TargetType="dxg:GridColumn">
                <Setter Property="ColumnHeaderContentStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="FontSize" Value="11" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"></Setter>

                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ScrollBar">
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="40"/>
                        <Setter Property="Background" Value="#445766"/>



                    </Trigger>
                </Style.Triggers>
            </Style>

        </Style.Resources>

    </Style>






    <Style TargetType="TextBox">
        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="Foreground" Value="White"/>
        <Setter Property="CaretBrush" Value="#445766"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="Height" Value="32"/>
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="BorderBrush" Value="#445766"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Border">
            <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#445766"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="7"/>
        </Style>



        <Style TargetType="{x:Type dxg:TreeListView}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="ShowVerticalLines" Value="False"/>
            <Setter Property="ShowHorizontalLines" Value="False"/>
            <Setter Property="ShowBandsPanel" Value="False"/>
            <Setter Property="ShowIndicator" Value="False"/>
            <Setter Property="ShowTotalSummary" Value="False"/>
            <Setter Property="AllowPerPixelScrolling" Value="True"/>
            <Setter Property="AllowEditing" Value="False"/>
            <Setter Property="ShowSearchPanelMode" Value="Never"/>
            <Setter Property="AllowFilterEditor" Value="False"/>
            <Setter Property="SearchPanelAllowFilter" Value="False"/>
            <Setter Property="ShowBandsInCustomizationForm" Value="False"/>
            <Setter Property="VerticalScrollbarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollbarVisibility" Value="Disabled"/>
            <Setter Property="NavigationStyle" Value="Row"/>
            <Setter Property="ShowFilterPanelMode" Value="Never"/>
            <Setter Property="AllowColumnFiltering" Value="False"/>

            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="dxg:RowControl">
                        <Setter Property="Background" Value="#146EC1DA"/>
                        <Setter Property="BorderBrush" Value="#FF292F41" />
                        <!--<Setter Property="Height" Value="24"/>-->
                        <Setter Property="Margin" Value="0,0,0,3"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="FontFamily" Value="{StaticResource OSBold}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                                <Setter Property="Background" Value="#406EC1DA" />
                            </Trigger>

                        </Style.Triggers>


                    </Style>
                </Setter.Value>
            </Setter>
        </Style>



        <ControlTemplate x:Key="CustomBorderTemplate" TargetType="{x:Type ContentControl}">
            <Grid x:Name="Grid1" MinWidth="0" MinHeight="0">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="InternalFocusStates">
                        <VisualState x:Name="InternalFocused">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InternalUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Background="#2F3A4D" BorderBrush="#3B556A" BorderThickness="2" CornerRadius="4.8"/>
                <ContentPresenter Margin="0,1" />
                <Border x:Name="FocusElement" BorderBrush="#3B556A" BorderThickness="2" Opacity="0" CornerRadius="4.8"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                    <Setter Property="MinWidth" TargetName="Grid1" Value="44" />
                    <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="Border" Value="0.35"></Setter>
                </Trigger>
                <!--<DataTrigger Binding="{Binding Path=(dxe:).IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Opacity" TargetName="Border" Value="0.62" />
                            </DataTrigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="CustomBorderTemplateGold" TargetType="{x:Type ContentControl}">
            <Grid x:Name="Grid1" MinWidth="0" MinHeight="0">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="InternalFocusStates">
                        <VisualState x:Name="InternalFocused">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InternalUnfocused" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border" Background="Transparent" BorderBrush="#5C4A3A" BorderThickness="2" CornerRadius="4.8"/>
                <ContentPresenter Margin="0,1" />
                <Border x:Name="FocusElement" BorderBrush="#5C4A3A" BorderThickness="2" Opacity="0" CornerRadius="4.8"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                    <Setter Property="MinWidth" TargetName="Grid1" Value="44" />
                    <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="Border" Value="0.35"></Setter>
                </Trigger>
                <!--<DataTrigger Binding="{Binding Path=(dxe:).IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Opacity" TargetName="Border" Value="0.62" />
                            </DataTrigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>



    <Style TargetType="{x:Type Grid}" x:Key="GrdBkColor">
        <Setter Property="Background" Value="#292F41"></Setter>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="GrdBkColor1">
        <Setter Property="Background" Value="#424E65"></Setter>
    </Style>


    <Style TargetType="{x:Type Window}" x:Key="ForeClr">
                        <Setter Property="Background" Value="Black"></Setter>
                    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DefaultText">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ThemeTextColor">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TBlkTitle">
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Border1">
        <Setter Property="Background" Value="#364A5D"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="Border2">
        <Setter Property="Background" Value="#406EC1DA"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="GroupBorder">
        <Setter Property="Background" Value="#445766"></Setter>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="AdminMenuHeaderMainBackground">
        <Setter Property="Background" Value="#4F9DAD"></Setter>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="AdminSubMenuHeaderMainBackground">
        <Setter Property="Background" Value="#415466"></Setter>
    </Style>
    
    <Style TargetType="{x:Type DockPanel}" x:Key="AdminMenuHeaderBackground">
        <Setter Property="Background" Value="#4F9DAD"></Setter>
    </Style>

    <Style TargetType="{x:Type Rectangle}" x:Key="AdminMenuSeparator">
        <Setter Property="Fill" Value="#66A9B7"></Setter>
    </Style>

    <Style TargetType="{x:Type WrapPanel}" x:Key="AdminSubmenuSeparator">
        <Setter Property="Background" Value="#415466"></Setter>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="AdminSubmenuBackground">
        <Setter Property="Background" Value="#2A3F4D"></Setter>
    </Style>

    <Style TargetType="{x:Type Rectangle}"  x:Key="DefaultLineStyle">
        <Setter Property="Fill" Value="#384657"></Setter>
        <Setter Property="Height" Value="1"></Setter>
    </Style>

    <Style TargetType="dxg:GroupRowControl" x:Key="GroupStyle">
        <Setter Property="Background" Value="#42657A" />
        <!--<Setter Property="Margin" Value="0,0,0,5"></Setter>-->
        <Setter Property="Foreground" Value="White"></Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <Style TargetType="dxg:TableView" x:Key="GroupRowStyle">

        <Setter Property="ShowVerticalLines" Value="False"/>
        <Setter Property="ShowHorizontalLines" Value="False"/>
        <Setter Property="ShowBandsPanel" Value="False"/>
        <Setter Property="ShowIndicator" Value="False"/>
        <Setter Property="ShowTotalSummary" Value="False"/>
        <Setter Property="AllowPerPixelScrolling" Value="True"/>
        <Setter Property="AllowEditing" Value="False"/>
        <Setter Property="ShowSearchPanelMode" Value="Never"/>
        <Setter Property="ShowGroupPanel" Value="False"/>
        <Setter Property="ShowHorizontalLines" Value="True"></Setter>
        <Setter Property="ShowVerticalLines" Value="True"></Setter>
        <Setter Property="AllowFilterEditor" Value="False"/>
        <Setter Property="SearchPanelAllowFilter" Value="False"/>
        <Setter Property="ShowBandsInCustomizationForm" Value="False"/>
        <Setter Property="VerticalScrollbarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollbarVisibility" Value="Disabled"/>
        <Setter Property="NavigationStyle" Value="Row"/>
        <Setter Property="ShowFilterPanelMode" Value="Never"/>
        <Setter Property="AllowColumnFiltering" Value="False"/>

        <Setter Property="CellStyle">
            <Setter.Value>

                <Style TargetType="{x:Type dxg:LightweightCellEditor}">
                    <Setter Property="BorderBrush" Value="#3C4C5C"/>
                </Style>
            </Setter.Value>
        </Setter>

        <!--
        <Setter Property="CellStyle">
            <Setter.Value>
                
                <Style BasedOn="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}" TargetType="{x:Type dxg:LightweightCellEditor}">
                    <Setter Property="BorderBrush" Value="#3C4C5C"/>
                </Style>
            </Setter.Value>
        </Setter>
        -->


        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="dxg:RowControl">
                    <Setter Property="Background" Value="#292E41"/>
                    <Setter Property="BorderBrush" Value="#3C4C5C" />
                    <Setter Property="Height" Value="33"/>
                    <!--<Setter Property="Margin" Value="0,0,0,7"/>-->
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="{StaticResource OSSemiBold}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                            <Setter Property="Background" Value="#406EC1DA" />
                        </Trigger>
                    </Style.Triggers>

                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="KeyboardBorder">
        <Setter Property="Background" Value="#406EC1DA"></Setter>
        <Setter Property="BorderBrush" Value="#B31F5364"></Setter>
    </Style>

    <Style TargetType="{x:Type dxe:TextEdit}" x:Key="RightAligned">
        <Setter Property="Foreground" Value="#DADADA"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource OSSemiBold}"></Setter>
    </Style>


    <Style TargetType="{x:Type Grid}" x:Key="LoginEmployeeBackcolor">
        <Setter Property="Background" Value="#292E41"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="LoginBackcolor">
        <Setter Property="Background" Value="#384556"></Setter>
    </Style>
    <Style TargetType="{x:Type Grid}" x:Key="KeypadBackcolor">
        <Setter Property="Background" Value="#2F3A4D"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="EnterPasscode">
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>

    <Style TargetType="{x:Type Ellipse}" x:Key="PasscodeEllipse">
        <Setter Property="Stroke" Value="#5CC0D8"></Setter>
        <Setter Property="Fill" Value="#292E41"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="LoginUser">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="BlueHeading">
        <Setter Property="Foreground" Value="#4F9DAD"></Setter>
        <Setter Property="FontWeight" Value="Bold" ></Setter>
        <Setter Property="FontSize" Value="22"></Setter>
    </Style>


    <Style TargetType="{x:Type Grid}" x:Key="POSRowGrid">
        <Setter Property="Background" Value="#2F3A4D"></Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="POSRow">
        <Setter Property="Background" Value="#2F3A4D"></Setter>
    </Style>


    <Style TargetType="{x:Type Grid}" x:Key="SameColor">
        <Setter Property="Background" Value="#4F9DAD"></Setter>
    </Style>



    <Style TargetType="{x:Type dxg:TableView}" x:Key="POSGridStyle">


        <Setter Property="Background" Value="#2F3A4D"/>
        <Setter Property="ShowVerticalLines" Value="False"/>
        <Setter Property="ShowHorizontalLines" Value="False"/>
        <Setter Property="ShowBandsPanel" Value="False"/>
        <Setter Property="ShowIndicator" Value="False"/>
        <Setter Property="ShowTotalSummary" Value="False"/>
        <Setter Property="AllowPerPixelScrolling" Value="True"/>
        <Setter Property="AllowEditing" Value="False"/>
        <Setter Property="ShowSearchPanelMode" Value="Never"/>
        <Setter Property="AllowFilterEditor" Value="False"/>
        <Setter Property="SearchPanelAllowFilter" Value="False"/>
        <Setter Property="ShowBandsInCustomizationForm" Value="False"/>
        <Setter Property="VerticalScrollbarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollbarVisibility" Value="Disabled"/>
        <Setter Property="NavigationStyle" Value="Row"/>
        <Setter Property="ShowFilterPanelMode" Value="Never"/>
        <Setter Property="AllowColumnFiltering" Value="False"/>


        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="dxg:RowControl">
                    <Setter Property="Background" Value="#2F3A4D"/>
                    <Setter Property="BorderBrush" Value="#3C4C5C" />
                    <Setter Property="Foreground" Value="#FFFFFF"></Setter>
                    <Setter Property="BorderThickness" Value="5"></Setter>
                    <Setter Property="Height" Value="54"/>
                    <Setter Property="Margin" Value="0,-2,0,0"></Setter>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="{DynamicResource OSSemiBold}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>


                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectionState}" Value="None">
                            <Setter Property="Background" Value="#2F3A4D"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                            <Setter Property="Height" Value="54"></Setter>
                            <Setter Property="FontFamily" Value="{DynamicResource OSBold}"></Setter>
                            <Setter Property="FontSize" Value="12"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectionState}" Value="1">
                            <Setter Property="Background" Value="#406EC1DA"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                            <Setter Property="Height" Value="54"></Setter>
                            <Setter Property="FontFamily" Value="{DynamicResource OSBold}"></Setter>
                            <Setter Property="FontSize" Value="12"></Setter>

                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </Setter.Value>
        </Setter>


    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CloseoutData">
        <Setter Property="Foreground" Value="#64C0D9"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CloseoutTotalData">
        <Setter Property="Foreground" Value="#4F9DAD"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="CloseoutHeader">
        <Setter Property="Background" Value="#2E413D"></Setter>
        <Setter Property="BorderBrush" Value="#2E413D"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="7,7,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="BarTabStyle">
        <Setter Property="Background" Value="#428998"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BarTabStyleBorder">
        <Setter Property="BorderBrush" Value="#4F9FB0"></Setter>
    </Style>


    <Style TargetType="{x:Type dxe:ToggleSwitch}">
        <Setter Property="Background" Value="#3E393D"></Setter>
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="Height" Value="32"/>
        <Setter Property="SwitchBorderTemplate">
            <Setter.Value>
                <DataTemplate x:Name="borderTemplate">
                    <Border x:Name="border" Width="40" 
                        Background="#292E41" 
                        BorderThickness="2" 
                        BorderBrush="#594737" 
                        CornerRadius="10"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#594737"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SwitchThumbTemplate">
            <Setter.Value>
                <DataTemplate x:Name="thumbTemplate">
                    <Ellipse x:Name="thumb"
                         Fill="#E28F1E" 
                         VerticalAlignment="Center" HorizontalAlignment="Center"
                         Width="12" Height="12" Margin="8,0"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                            <Setter Property="Fill" TargetName="thumb" Value="#E28F1E"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                            <Setter Property="Fill" TargetName="thumb" Value="#dbb581"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type Border}" x:Key="GreenHeaderStyle">
        <Setter Property="Background" Value="#D5E9D5"></Setter>
        <Setter Property="BorderBrush" Value="#D5E9D5"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="7,7,0,0"></Setter>
        <Setter Property="Height" Value="25"></Setter>
    </Style>



    <Style TargetType="{x:Type Border}" x:Key="GreenBorder">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Background" Value="#335739"></Setter>
        <Setter Property="BorderBrush" Value="#335739"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="7,7,0,0"></Setter>
    </Style>


    <Style TargetType="{x:Type Border}" x:Key="PurpleBorder">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Background" Value="#4C3569"></Setter>
        <Setter Property="BorderBrush" Value="#4C3569"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="7,7,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="OrangeBorder">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Background" Value="#6D5234"></Setter>
        <Setter Property="BorderBrush" Value="#6D5234"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="7,7,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BlueBorder">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Background" Value="#46637C"></Setter>
        <Setter Property="BorderBrush" Value="#46637C"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="7,7,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="PurpleBorderInfo">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Margin" Value="10,2,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="GreenBorderInfo">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Margin" Value="10,2,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="OrangeBorderInfo">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Margin" Value="10,2,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="BlueBorderInfo">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Margin" Value="10,2,0,0"></Setter>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="ScreenSeparator">
        <Setter Property="Background" Value="#374555"></Setter>
        <Setter Property="Width" Value="2"></Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="DummyBorder">
        <Setter Property="Background" Value="#2F3A4D"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="HighlightFont">
        <Setter Property="Foreground" Value="Coral"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="HighlightFontSmall">
        <Setter Property="Foreground" Value="Coral"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>


    <Style TargetType="{x:Type TabControl}" x:Key="NoTab">
        <Setter Property="Background" Value="#292E41"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>


    <Style x:Key="ThickScroll" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="#47435465" Grid.Row="1" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="0" Grid.Row="0" VerticalAlignment="Top" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" UseLayoutRounding="True" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" >
                            <ScrollBar.Style>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Width" Value="40"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid x:Name="Bg" SnapsToDevicePixels="True" Background="#2F3A4D" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="50"/>
                                                        <RowDefinition Height="1E-05*"/>
                                                        <RowDefinition Height="50"/>
                                                    </Grid.RowDefinitions>
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Grid.Row="1" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                                                    <RepeatButton x:Name="PART_LineUpButton" Command="ScrollBar.LineUpCommand" IsEnabled="{TemplateBinding IsMouseOver}"  Margin="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="False" >
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                <Setter Property="Padding" Value="0"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="#2F3A4D" CornerRadius="0" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:DesignUseLayoutRounding="True"/>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Background" TargetName="border" Value="#2F3A4D"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Background" TargetName="border" Value="#2F3A4D"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                        <Grid Height="50">
                                                            <Image  x:Name="UpBlackArrow" Height="21" Margin="0,0,0,0" Opacity="1" Source="{StaticResource UpCyan}" UseLayoutRounding="False" Width="21" d:DesignUseLayoutRounding="False"/>
                                                        </Grid>
                                                    </RepeatButton>
                                                    <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                        <Track.DecreaseRepeatButton>
                                                            <RepeatButton Command="ScrollBar.PageUpCommand" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="Auto" UseLayoutRounding="True" Width="Auto" d:DesignUseLayoutRounding="True"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Command="ScrollBar.PageDownCommand" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="Auto" UseLayoutRounding="True" Width="Auto" d:DesignUseLayoutRounding="True"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                            </RepeatButton>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Background" Value="#385769"/>
                                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                                        <Setter Property="BorderThickness" Value="0"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" Height="Auto" SnapsToDevicePixels="True" UseLayoutRounding="True" Width="Auto" d:DesignUseLayoutRounding="True"/>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Background" Value="#385769"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsDragging" Value="True">
                                                                                            <Setter Property="Background" Value="#385769"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                    <RepeatButton x:Name="PART_LineDownButton" Command="ScrollBar.LineDownCommand" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" UseLayoutRounding="True" d:DesignUseLayoutRounding="True" >
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                <Setter Property="Padding" Value="0"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="#2F3A4D" CornerRadius="0" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:DesignUseLayoutRounding="True"/>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Background" TargetName="border" Value="#2F3A4D"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Background" TargetName="border" Value="#2F3A4D"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                        <Grid Height="50">
                                                            <Image x:Name="DownBlackArrow" Height="21" Margin="0,0,0,0" Opacity="1" Source="{StaticResource DownCyan}" UseLayoutRounding="True" Width="21" d:DesignUseLayoutRounding="True"/>
                                                        </Grid>
                                                    </RepeatButton>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Opacity" TargetName="DownBlackArrow" Value="1"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Opacity" TargetName="UpBlackArrow" Value="1"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Opacity" TargetName="DownBlackArrow" Value="0.7"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Opacity" TargetName="UpBlackArrow" Value="0.7"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="UpBlackArrow" Value="0.5"/>
                                                        <Setter Property="Opacity" TargetName="DownBlackArrow" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="Orientation" Value="Horizontal">
                                            <Setter Property="Width" Value="Auto"/>
                                            <Setter Property="MinWidth" Value="0"/>
                                            <Setter Property="Height" Value="9"/>
                                            <Setter Property="MinHeight" Value="9"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Background" Value="#47435465"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                        <Grid x:Name="Bg" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MaxWidth="0"/>
                                                                <ColumnDefinition Width="1E-05*"/>
                                                                <ColumnDefinition MaxWidth="0"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" CornerRadius="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True"/>
                                                            <RepeatButton x:Name="PART_LineLeftButton" Command="ScrollBar.LineLeftCommand" IsEnabled="{TemplateBinding IsMouseOver}" Margin="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                        <Setter Property="Padding" Value="0"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="#47435465" CornerRadius="0" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:DesignUseLayoutRounding="True"/>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#47435465"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#47435465"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <Grid UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                    <Image x:Name="LeftBlackArrow" Height="13" Opacity="1" Source="{x:Null}" UseLayoutRounding="True" Width="13" d:DesignUseLayoutRounding="True"/>
                                                                </Grid>
                                                            </RepeatButton>
                                                            <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                <Track.DecreaseRepeatButton>
                                                                    <RepeatButton Command="ScrollBar.PageLeftCommand" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="Auto" UseLayoutRounding="True" Width="Auto" d:DesignUseLayoutRounding="True"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.DecreaseRepeatButton>
                                                                <Track.IncreaseRepeatButton>
                                                                    <RepeatButton Command="ScrollBar.PageRightCommand" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="Auto" UseLayoutRounding="True" Width="Auto" d:DesignUseLayoutRounding="True"/>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                    </RepeatButton>
                                                                </Track.IncreaseRepeatButton>
                                                                <Track.Thumb>
                                                                    <Thumb UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                        <Thumb.Style>
                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Background" Value="#FF435465"/>
                                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" Height="Auto" SnapsToDevicePixels="True" UseLayoutRounding="True" Width="Auto" d:DesignUseLayoutRounding="True"/>
                                                                                            <ControlTemplate.Triggers>
                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                    <Setter Property="Background" Value="#FF55697D"/>
                                                                                                </Trigger>
                                                                                                <Trigger Property="IsDragging" Value="True">
                                                                                                    <Setter Property="Background" Value="#FF435465"/>
                                                                                                </Trigger>
                                                                                            </ControlTemplate.Triggers>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </Thumb.Style>
                                                                    </Thumb>
                                                                </Track.Thumb>
                                                            </Track>
                                                            <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="ScrollBar.LineRightCommand" IsEnabled="{TemplateBinding IsMouseOver}" Margin="0" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                        <Setter Property="Padding" Value="0"/>
                                                                        <Setter Property="Focusable" Value="False"/>
                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="#47435465" CornerRadius="0" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:DesignUseLayoutRounding="True"/>
                                                                                    </Border>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#47435465"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsPressed" Value="True">
                                                                                            <Setter Property="Background" TargetName="border" Value="#47435465"/>
                                                                                        </Trigger>
                                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <Grid UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                                                    <Image x:Name="RightBlackArrow" Height="13" Opacity="1" Source="{x:Null}" Stretch="UniformToFill" UseLayoutRounding="True" Width="13" d:DesignUseLayoutRounding="True"/>
                                                                </Grid>
                                                            </RepeatButton>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="RightBlackArrow" Value="1"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="LeftBlackArrow" Value="1"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="RightBlackArrow" Value="0.7"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="LeftBlackArrow" Value="0.7"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="LeftBlackArrow" Value="0.5"/>
                                                                <Setter Property="Opacity" TargetName="RightBlackArrow" Value="0.5"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ScrollBar.Style>
                        </ScrollBar>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" UseLayoutRounding="True" Visibility="Collapsed" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" d:DesignUseLayoutRounding="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type dxsch:SchedulerControl}">
        <Setter Property="Background" Value="#292F41"></Setter>
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
    </Style>

    <Style TargetType="{x:Type dxschv:TimeRulerCellControl}" x:Key="DayViewTmRulerStyle">
        <Setter Property="Foreground" Value="#FFFFFF"></Setter>
        <Setter Property="HourStringFormat" Value="{}{0:hh}"/>
        <Setter Property="MinuteStringFormat" Value="{}{0:mm}"/>
    </Style>


    <Style TargetType="{x:Type dxschv:CellControl}" x:Key="DayViewClStyle" >
        <Setter Property="BottomBorderThickness" Value="0.5" />
        <Setter Property="LeftBorderThickness" Value="0" />
        <Setter Property="SelectedBackground" Value="#445766" />
        <Setter Property="TextBlock.Foreground" Value="#FFFFFF"></Setter>
        <Style.Triggers>

            <DataTrigger Binding="{Binding IsWorkTime}" Value="true">
                <Setter Property="Background" Value="#292F41" />

            </DataTrigger>
            <DataTrigger Binding="{Binding IsWorkTime}" Value="false">
                <Setter Property="Background" Value="#292F41" />

            </DataTrigger>
            <DataTrigger Binding="{Binding Interval.Start.Day}" Value="2">
                <Setter Property="Background" Value="#292F41" />
            </DataTrigger>



        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="NavGroup">
        <Setter Property="Background" Value="#4F9DAD"></Setter>
    </Style>

    <Style TargetType="{x:Type DockPanel}" x:Key="NavGroupSelected">
        <Setter Property="Background" Value="#64C0D9"></Setter>
    </Style>

    <Style TargetType="{x:Type dxe:FlyoutControl}" x:Key="rtFlyout">
        <Setter Property="Background" Value="#292E41"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="rtNormal">
    <Setter Property="FontStyle" Value="Normal"></Setter>
    <Setter Property="Foreground" Value="#686868"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="rtItalic">
        <Setter Property="FontStyle" Value="Italic"></Setter>
        <Setter Property="Foreground" Value="#686868"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="rtBold">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Foreground" Value="#686868"></Setter>
    </Style> 

</ResourceDictionary>